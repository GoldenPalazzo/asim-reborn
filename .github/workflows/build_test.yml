name: Build executable
on: [push]
jobs:
  Build-Exe:
    strategy:
      matrix:
        include:
          - os: 'ubuntu-20.04'
            binf:   'bin/'
            resf:   'res/'
            script: './src/prepare_repo.sh'
            b68k:   'lib/bare68k-0.1.2-cp312-cp312-linux_x86_64.whl'
            vasm:   'bin/vasmm68k_mot_linux'
            main:   'src/main.py'
            exec:   'dist/AsimReborn'
            art:    'asimreborn-lin'
          - os: 'windows-latest'
            binf:   'bin\'
            resf:   'res\'
            script: '.\src\prepare_repo.bat'
            b68k: '.\lib\bare68k-0.1.2-cp312-cp312-win_amd64.whl'
            vasm: '.\bin\vasmm68k_mot_linux'
            main: '.\src\main.py'
            exec: '.\dist\AsimReborn.exe'
            art:  'asimreborn-win64'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checking out repo code
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.3'
      - name: Installing linux build packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install --yes libxcb-cursor0 libxcb-shape0 libxcb-image0 \
             libxcb-keysyms1 libxkbcommon-x11-0 libxcb-icccm4 libxcb-xkb1 \
             libxcb-randr0  libxcb-render-util0
      - name: Download resources
        run: ${{ matrix.script }}
      - name: Install build dependencies linux
        if: runner.os == 'Linux'
        run: |
          python -m pip install pip pyinstaller
          pip install -r requirements.txt
          pip install ${{ matrix.b68k }}
      - name: Install build dependencies windows
        if: runner.os == 'Windows'
        run: |
          set PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
          python -m pip install pip pyinstaller
          pip install -r requirements.txt
          pip install ${{ matrix.b68k }}
      - name: Build executable
        run: |
          pyinstaller --clean --onedir --name "AsimReborn" --add-binary="${{ matrix.vasm }}:${{ matrix.binf }}" --add-data="${{ matrix.resf }}DroidSansMono.ttf:${{ matrix.resf }}" ${{ matrix.main }}
      - name: Deploy artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.art }}
          path: ${{ matrix.exec }}
          if-no-files-found: error

